{"version":3,"sources":["redux/colorGridSlice.js","components/ColorGrid.js","components/OptionsPage sync","components/DynaColorBox.js","components/ColorGetter.js","components/GridWrapper.js","components/Grid.js","assets/watercolor-circle2.svg","assets/watercolor-circle3.svg","assets/watercolor-circle.svg","assets/watercolor-background.png","components/OptionsDropdown.js","components/OptionsPage/Background.js","components/OptionsPage/OptionsForm.js","components/OptionsPage/WatercolorCircles.js","redux/userSlice.js","components/SaveDropdown.js","components/LoadDropdown.js","components/ColorChooseIndicator.js","components/ShouldLogIn.js","components/TopBar.js","components/OptionsPage/OptionsPage.js","components/LoginSignupPages/AlertBox.js","components/LoginSignupPages/WatercolorBackground.js","components/LoginSignupPages/Login.js","components/LoginSignupPages/Signup.js","App.js","redux/store.js","index.js"],"names":["colorGridSlice","createSlice","name","initialState","colorGrid","gettingColor","reducers","setColorGrid","state","action","payload","setGettingColor","console","log","selectColorGrid","selectGettingColor","actions","__createBinding","this","Object","create","o","m","k","k2","undefined","defineProperty","enumerable","get","__setModuleDefault","v","value","__importStar","mod","__esModule","result","prototype","hasOwnProperty","call","__importDefault","exports","react_1","require","GridWrapper_1","react_router_dom_1","props","_a","useState","createElement","Fragment","grid","setGrid","history","useHistory","useEffect","document","body","classList","add","remove","reloadingWithOptions","options","sessionStorage","getItem","JSON","parse","outerShellOnly","initialVariance","rippleVariance","maxGridSize","rippleSpeed","ripplePropagation","initialGrayscale","rippleTransitionSpeed","push","autoDrop","grayscaleChange","webpackEmptyContext","req","e","Error","code","keys","resolve","module","id","clickVariance","variance","_b","opacity","setOpacity","_c","Math","floor","random","opacityTransition","_d","colorTransition","boxHeight","height","Number","numColumns","styles","colorBox","width","backgroundColor","red","green","blue","transitionProperty","transitionDuration","borderRadius","overflow","plusMinus","style","onClick","redVar","redPlusMinus","greenVar","greenPlusMinus","blueVar","bluePlusMinus","changeSurroundings","Dropdown_1","colorGridSlice_1","react_redux_1","dispatch","useDispatch","useSelector","className","Toggle","variant","Menu","Item","Grid_1","colorGridSlice_2","randGreen","randBlue","_e","_f","_g","_j","_k","_m","_o","gridSize","_p","randRed","newGrid","i","j","newRed","newGreen","newBlue","changeColor","grids","maxDelta","startDelta","row","col","redChange","greenChange","blueChange","currentGrid","map","a","b","setTimeout","ranges","unshift","forEach","abs","TypeError","currentRow","r","currentCol","c","length","stringify","splice","Grid","window","innerWidth","setWidth","innerHeight","setHeight","allowResize","addEventListener","key","box","data-value","OptionsDropdown","redirect","setRedirect","generateNewGrid","to","location","reload","generateDefaultGrid","Dropdown","href","Background","top","objectFit","margin","backgroundRepeat","backgroundAttachment","backgroundSize","backgroundPosition","position","zIndex","OptionsForm","getElementById","checked","Container","Form","onSubmit","handleFormSubmit","noValidate","validated","Row","Col","Group","controlId","Label","Control","type","placeholder","defaultValue","max","min","Text","Check","label","defaultChecked","Button","circle2","circle3","circle1","WatercolorCircles","opacity1","setOpacity1","opacity2","setOpacity2","opacity3","setOpacity3","left","transform","counter","changeOpacity","opacityArr","opacityInterval","setInterval","clearInterval","Image","src","alt","userSlice","currentUser","loggedInUser","selectLoggedInUser","user","SaveDropdown","userInfo","saveGrid","slot","Axios","put","_id","then","data","catch","err","error","LoadDropdown","loadGrid","loadedGrid","ColorChooseIndicator","chooseIndicator","transition","disabled","ShouldLogIn","loginBtn","setLoginBtn","logout","TopBar","save","setSave","load","setLoad","OptionsPage","setValidated","Jumbotron","fluid","event","preventDefault","form","currentTarget","checkValidity","stopPropagation","target","setItem","AlertBox","div","message","WatercolorBackground","marginTop","Login","username","setUsername","password","setPassword","setMessage","onChange","axios","post","Signup","loading","App","exact","path","component","configureStore","reducer","userReducer","colorGridReducer","ReactDOM","render","StrictMode","store"],"mappings":"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","file":"static/js/main.34ccc661.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nexport const colorGridSlice = createSlice({\n  name: 'colorGrid',\n  initialState: {\n    colorGrid: [],\n    gettingColor: false\n  },\n  reducers: {\n    setColorGrid: (state, action) => {\n      state.colorGrid = action.payload;\n    },\n    setGettingColor: (state) => {\n      console.log(state)\n      console.log('hjaishf')\n      state.gettingColor = !state.gettingColor\n    }\n  }\n})\n\nexport const selectColorGrid = state => state.colorGrid.colorGrid;\nexport const selectGettingColor = state => state.colorGrid.gettingColor;\n\nexport const { setColorGrid, setGettingColor } = colorGridSlice.actions;\n\nexport default colorGridSlice.reducer;","\"use strict\";\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n});\r\nvar __importStar = (this && this.__importStar) || function (mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n};\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nexports.__esModule = true;\r\nvar react_1 = __importStar(require(\"react\"));\r\nvar GridWrapper_1 = __importDefault(require(\"./GridWrapper\"));\r\nvar react_router_dom_1 = require(\"react-router-dom\");\r\n/** highest-order component for ColorGrid. The grid array generation should be in this function,\r\n * since the array needs to be generated in order for all other components to operate.\r\n * For example, the ColorGrid array needs to be in place first, before the autoDrop works properly,\r\n * or before the DynaColorBox components can be mapped. */\r\nfunction ColorGrid(props) {\r\n    var _a = react_1.useState(react_1[\"default\"].createElement(react_1[\"default\"].Fragment, null)), grid = _a[0], setGrid = _a[1];\r\n    var history = react_router_dom_1.useHistory();\r\n    // disallow scroll bar when the grid is on the page (cuz it messes up margins)\r\n    react_1.useEffect(function () {\r\n        document.body.classList.add('no-scroll');\r\n        return function () {\r\n            document.body.classList.remove('no-scroll');\r\n        };\r\n    }, []);\r\n    // if at the /optionsgrid route, the custom options here will be loaded from session storage\r\n    react_1.useEffect(function () {\r\n        if (props.reloadingWithOptions) {\r\n            var options = sessionStorage.getItem('optionsGrid');\r\n            if (!options) {\r\n                history.push('/options');\r\n            }\r\n            else {\r\n                options = JSON.parse(options);\r\n                setGrid(react_1[\"default\"].createElement(GridWrapper_1[\"default\"], { outerShellOnly: options.outerShellOnly, initialVariance: options.initialVariance, rippleVariance: options.rippleVariance, maxGridSize: options.maxGridSize, rippleSpeed: options.rippleSpeed, ripplePropagation: options.ripplePropagation, initialGrayscale: options.initialGrayscale, rippleTransitionSpeed: options.rippleTransitionSpeed }));\r\n            }\r\n        }\r\n    }, []);\r\n    if (props.reloadingWithOptions) {\r\n        return (react_1[\"default\"].createElement(react_1[\"default\"].Fragment, null, grid));\r\n    }\r\n    else {\r\n        return (react_1[\"default\"].createElement(GridWrapper_1[\"default\"]\r\n        // options. These have default values if not entered.\r\n        , { \r\n            // options. These have default values if not entered.\r\n            outerShellOnly: props.outerShellOnly, initialVariance: props.initialVariance, rippleVariance: props.rippleVariance, maxGridSize: props.maxGridSize, rippleSpeed: props.rippleSpeed, ripplePropagation: props.ripplePropagation, autoDrop: props.autoDrop, rippleTransitionSpeed: props.rippleTransitionSpeed, initialGrayscale: props.initialGrayscale, grayscaleChange: props.grayscaleChange }));\r\n    }\r\n}\r\nexports[\"default\"] = ColorGrid;\r\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 36;","\"use strict\";\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n});\r\nvar __importStar = (this && this.__importStar) || function (mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n};\r\nexports.__esModule = true;\r\nvar react_1 = __importStar(require(\"react\"));\r\nfunction DynaColorBox(props) {\r\n    var _a = react_1.useState(props.clickVariance), variance = _a[0], setVariance = _a[1];\r\n    var _b = react_1.useState(0), opacity = _b[0], setOpacity = _b[1];\r\n    var _c = react_1.useState(Math.floor(Math.random() * 15)), opacityTransition = _c[0], setOpacityTransition = _c[1];\r\n    var _d = react_1.useState(props.rippleTransitionSpeed), colorTransition = _d[0], setColorTransition = _d[1];\r\n    // height of boxes is based on browser window height\r\n    // rounding down so that boxes don't overflow window and cause weird rendering\r\n    var boxHeight = Math.floor(props.height / Number(props.numColumns));\r\n    var boxWidth = Math.floor(props.width / Number(props.numColumns));\r\n    var styles = {\r\n        colorBox: {\r\n            width: boxWidth + 'px',\r\n            height: boxHeight + 'px',\r\n            backgroundColor: \"rgb(\" + props.red + \", \" + props.green + \", \" + props.blue + \")\",\r\n            opacity: opacity,\r\n            transitionProperty: 'opacity, background-color',\r\n            transitionDuration: opacityTransition + \"s, \" + colorTransition + \"s\",\r\n            borderRadius: '20px',\r\n            overflow: 'hidden'\r\n        }\r\n    };\r\n    react_1.useEffect(function () {\r\n        setOpacity(1);\r\n    }, []);\r\n    var plusMinus = [-1, 1]; // plus or minus random color variance\r\n    // generates a random color variance, then propogates to surroundings thru props.changeSurroundings\r\n    var changeColors = function () {\r\n        var redVar = Math.floor(Math.random() * variance);\r\n        var redPlusMinus = plusMinus[Math.floor(Math.random() * 2)];\r\n        var greenVar = Math.floor(Math.random() * variance);\r\n        var greenPlusMinus = plusMinus[Math.floor(Math.random() * 2)];\r\n        var blueVar = Math.floor(Math.random() * variance);\r\n        var bluePlusMinus = plusMinus[Math.floor(Math.random() * 2)];\r\n        props.changeSurroundings(props['data-value'], [redVar * redPlusMinus, greenVar * greenPlusMinus, blueVar * bluePlusMinus]);\r\n    };\r\n    return (react_1[\"default\"].createElement(react_1[\"default\"].Fragment, null,\r\n        react_1[\"default\"].createElement(\"div\", { style: styles.colorBox, onClick: changeColors })));\r\n}\r\nexports[\"default\"] = DynaColorBox;\r\n","\"use strict\";\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nexports.__esModule = true;\r\nvar react_1 = __importDefault(require(\"react\"));\r\nvar axios_1 = __importDefault(require(\"axios\"));\r\nvar Dropdown_1 = __importDefault(require(\"react-bootstrap/Dropdown\"));\r\nvar colorGridSlice_1 = require(\"../redux/colorGridSlice\");\r\nvar react_redux_1 = require(\"react-redux\");\r\nfunction ColorGetter() {\r\n    var dispatch = react_redux_1.useDispatch();\r\n    var gettingColor = react_redux_1.useSelector(colorGridSlice_1.selectGettingColor);\r\n    var retrieveColor = function () {\r\n        axios_1[\"default\"].get('/api/colorgetter').then(function (data) {\r\n            console.log(data);\r\n        });\r\n    };\r\n    var colorDropper = function () {\r\n        // set gettingColor so that instead of changing the surrounding colors, clicking on a square will get rgb values\r\n        dispatch(colorGridSlice_1.setGettingColor());\r\n        console.log('color dropper');\r\n        console.log(gettingColor);\r\n    };\r\n    // to implement: set a flag for 'picking a color', which is activated by selecting the appropriate option in the dropdown.\r\n    // when flag is set, clicking on a color will not trigger the changeSurroundings function\r\n    // instead it will make a call to the /api/colorgetter route\r\n    // the route will make an ajax call to the color api, with the rgb values\r\n    // finally, the returned values from the api can be displayed\r\n    // the display can possibly be in a navbar of some sort? to be implemented\r\n    // perhaps the color grid should be put into a container-fluid rather than the entire window\r\n    return (react_1[\"default\"].createElement(react_1[\"default\"].Fragment, null,\r\n        react_1[\"default\"].createElement(Dropdown_1[\"default\"], { className: 'dropdown' },\r\n            react_1[\"default\"].createElement(Dropdown_1[\"default\"].Toggle, { variant: \"secondary\", className: \"dropdown-basic\" }, \"Get Colors\"),\r\n            react_1[\"default\"].createElement(Dropdown_1[\"default\"].Menu, null,\r\n                react_1[\"default\"].createElement(Dropdown_1[\"default\"].Item, { onClick: function () { return colorDropper(); } }, \"Color Dropper\")))));\r\n}\r\nexports[\"default\"] = ColorGetter;\r\n// also to implement: local storage for a grid\r\n// storage of grids per user\r\n// navbar to hold options, etc.\r\n","\"use strict\";\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n});\r\nvar __importStar = (this && this.__importStar) || function (mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n};\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nexports.__esModule = true;\r\nvar react_1 = __importStar(require(\"react\"));\r\nvar Grid_1 = __importDefault(require(\"./Grid\"));\r\nvar colorGridSlice_1 = require(\"../redux/colorGridSlice\");\r\nvar colorGridSlice_2 = require(\"../redux/colorGridSlice\");\r\nvar react_redux_1 = require(\"react-redux\");\r\n/** Should manage options, auto function, and ripple change functions.\r\n* Should get the initial grid array from a higher order component. */\r\nfunction GridWrapper(_a) {\r\n    var _b = _a.outerShellOnly, outerShellOnly = _b === void 0 ? false : _b, _c = _a.initialVariance, initialVariance = _c === void 0 ? 50 : _c, _d = _a.rippleVariance, rippleVariance = _d === void 0 ? 100 : _d, _e = _a.maxGridSize, maxGridSize = _e === void 0 ? 20 : _e, _f = _a.rippleSpeed, rippleSpeed = _f === void 0 ? 100 : _f, _g = _a.ripplePropagation, ripplePropagation = _g === void 0 ? 3 : _g, _h = _a.autoDrop, autoDrop = _h === void 0 ? false : _h, _j = _a.rippleTransitionSpeed, rippleTransitionSpeed = _j === void 0 ? 1.5 : _j, _k = _a.initialGrayscale, initialGrayscale = _k === void 0 ? true : _k, _l = _a.grayscaleChange, grayscaleChange = _l === void 0 ? false : _l;\r\n    // const [colorGrid, setColorGrid] = useState([]);\r\n    var _m = react_1.useState(initialVariance), variance = _m[0], setVariance = _m[1];\r\n    var _o = react_1.useState(maxGridSize), gridSize = _o[0], setGridSize = _o[1];\r\n    var _p = react_1.useState(rippleVariance), clickVariance = _p[0], setClickVariance = _p[1];\r\n    var dispatch = react_redux_1.useDispatch();\r\n    var colorGrid = react_redux_1.useSelector(colorGridSlice_1.selectColorGrid);\r\n    var gettingColor = react_redux_1.useSelector(colorGridSlice_2.selectGettingColor);\r\n    // initial random color to be applied to entire grid\r\n    // limit the range so that the variance won't be producing too much black or white by hitting 0 or 255\r\n    var randRed = Math.floor(Math.random() * 256);\r\n    if (randRed < initialVariance) {\r\n        randRed = initialVariance;\r\n    }\r\n    else if (randRed + initialVariance > 255) {\r\n        randRed = 255 - initialVariance;\r\n    }\r\n    var randGreen;\r\n    var randBlue;\r\n    if (initialGrayscale) {\r\n        randGreen = randRed;\r\n        randBlue = randRed;\r\n    }\r\n    else {\r\n        randGreen = Math.floor(Math.random() * 256);\r\n        randBlue = Math.floor(Math.random() * 256);\r\n    }\r\n    // determines whether to add or subtract variance from initial color\r\n    var plusMinus = [-1, 1];\r\n    // background color to be implemented, but doing it this way rerenders it every time grid changes\r\n    // let styles = {\r\n    //   background: {\r\n    //     backgroundColor: `rgb(${randRed}, ${randGreen}, ${randBlue})`\r\n    //   }\r\n    // }\r\n    // initializes the color grid by generating random color variance, with the random RGB values above as starting points.\r\n    react_1.useEffect(function () {\r\n        var newGrid = [];\r\n        for (var i = 0; i < gridSize; i++) {\r\n            newGrid.push([]);\r\n            for (var j = 0; j < gridSize; j++) {\r\n                var redVar = Math.floor(Math.random() * variance);\r\n                var redPlusMinus = plusMinus[Math.floor(Math.random() * 2)];\r\n                var blueVar = Math.floor(Math.random() * variance);\r\n                var bluePlusMinus = plusMinus[Math.floor(Math.random() * 2)];\r\n                var greenVar = Math.floor(Math.random() * variance);\r\n                var greenPlusMinus = plusMinus[Math.floor(Math.random() * 2)];\r\n                var newRed = randRed + redVar * redPlusMinus;\r\n                var newGreen = void 0;\r\n                var newBlue = void 0;\r\n                if (initialGrayscale) {\r\n                    newGreen = newRed;\r\n                    newBlue = newRed;\r\n                }\r\n                else {\r\n                    newGreen = randGreen + greenVar * greenPlusMinus;\r\n                    newBlue = randBlue + blueVar * bluePlusMinus;\r\n                }\r\n                newGrid[i].push({\r\n                    red: newRed > 255 ? 255 : (newRed < 0 ? 0 : newRed),\r\n                    green: newGreen > 255 ? 255 : (newGreen < 0 ? 0 : newGreen),\r\n                    blue: newBlue > 255 ? 255 : (newBlue < 0 ? 0 : newBlue)\r\n                });\r\n            }\r\n        }\r\n        dispatch(colorGridSlice_1.setColorGrid(newGrid));\r\n    }, []);\r\n    // auto function. automatically selects a random row and column to execute changeSurroundings function for.\r\n    // useEffect(() => {\r\n    //   // console.log(\"checking auto\")\r\n    //   // console.log(autoDrop)\r\n    //   // console.log(colorGrid.length)\r\n    //   function auto() {\r\n    //     if (autoDrop && colorGrid.length > 0) {\r\n    //       console.log(\"start auto\")\r\n    //       // autoDrop = false;\r\n    //       setTimeout(() => {\r\n    //         console.log(colorGrid)\r\n    //         console.log(\"auto\")\r\n    //         let randRow = Math.floor(Math.random() * gridSize);\r\n    //         let randCol = Math.floor(Math.random() * gridSize);\r\n    //         let redVar = Math.floor(Math.random() * clickVariance)\r\n    //         let redPlusMinus = plusMinus[Math.floor(Math.random() * 2)]\r\n    //         let greenVar = Math.floor(Math.random() * clickVariance)\r\n    //         let greenPlusMinus = plusMinus[Math.floor(Math.random() * 2)]\r\n    //         let blueVar = Math.floor(Math.random() * clickVariance)\r\n    //         let bluePlusMinus = plusMinus[Math.floor(Math.random() * 2)]\r\n    //         changeSurroundings({r: randRow, c: randCol}, [redVar * redPlusMinus, greenVar * greenPlusMinus, blueVar * bluePlusMinus])\r\n    //         // setColorGrid(colorGrid)\r\n    //       }, rippleSpeed * ripplePropagation * 10)\r\n    //     }\r\n    //   }\r\n    //   auto()\r\n    // },[colorGrid.length])\r\n    /** Accepts a 2D array and initial row/column value, containing rgb objects. Propogates rgb changes one array shell at a time.\r\n     * @param {Array} grids A 2d array, consisting of an outer array of rows, and inner arrays corresponding to columns, with each row/col having an rgb object\r\n     * @param {Number} maxDelta The maximum propogation of color change\r\n     * @param {Number} startDelta The innermost shell in the array that will be changed\r\n     * @param {Number} row The starting row, corresponding to the outermost array\r\n     * @param {Number} col The starting column, corresponding to the inner arrays\r\n     * @param {Number} redChange The amount that each red value in the rgb objects will be changed. Similar for greenChange and blueChange */\r\n    var changeColor = function (grids, maxDelta, startDelta, row, col, redChange, greenChange, blueChange) {\r\n        if (startDelta === void 0) { startDelta = 1; }\r\n        // mapping to new grid to create a copy that doesn't have same reference\r\n        var currentGrid = grids.map(function (a) { return a.map(function (b) { return b; }); });\r\n        setTimeout(function () {\r\n            // ranges is the row and column numbers of boxes to be changed - ex. [-2, -1, 0, 1, 2]\r\n            var ranges = [0];\r\n            for (var i = 1; i <= startDelta; i++) {\r\n                ranges.unshift(-i);\r\n                ranges.push(i);\r\n            }\r\n            ;\r\n            // for each row/col in the range, return a new value in the outermost shell\r\n            // the outermost shell will always have at least one row or column equal to the absolute value of the max range\r\n            ranges.forEach(function (a) {\r\n                return (\r\n                // ranges is originally a 1 dimensional array. This is turning ranges into a 2D array of dimensions equal to max range,\r\n                // by associating each 'a' value with another array of 'b' values\r\n                ranges.forEach(function (b) {\r\n                    // only change the current outermost shell:\r\n                    if (Math.abs(b) === startDelta || Math.abs(a) === startDelta) {\r\n                        try {\r\n                            var newRed = currentGrid[a + row][b + col].red + redChange;\r\n                            var newGreen = currentGrid[a + row][b + col].green + greenChange;\r\n                            var newBlue = currentGrid[a + row][b + col].blue + blueChange;\r\n                            currentGrid[a + row][b + col] = {\r\n                                red: newRed > 255 ? 255 : (newRed < 0 ? 0 : newRed),\r\n                                green: newGreen > 255 ? 255 : (newGreen < 0 ? 0 : newGreen),\r\n                                blue: newBlue > 255 ? 255 : (newBlue < 0 ? 0 : newBlue)\r\n                            };\r\n                        }\r\n                        catch (TypeError) {\r\n                            // this expected error will happen if ripples go out of bounds\r\n                        }\r\n                    }\r\n                }));\r\n            });\r\n            dispatch(colorGridSlice_1.setColorGrid(currentGrid));\r\n            // can set the grids param to the original grids in order to only save changes to the outermost shell, instead of all shells, since the original grid has not changed\r\n            // remember we are working with currentGrid, which is a copy of the original grids.\r\n            if (outerShellOnly) {\r\n                startDelta < maxDelta && changeColor(grids, maxDelta, startDelta + 1, row, col, redChange, greenChange, blueChange);\r\n                // or set to currentGrid to change all shells\r\n            }\r\n            else {\r\n                startDelta < maxDelta && changeColor(currentGrid, maxDelta, startDelta + 1, row, col, redChange, greenChange, blueChange);\r\n            }\r\n        }, rippleSpeed);\r\n    };\r\n    /** function passed to color boxes, triggered on click.\r\n    * Gets the row and column of the clicked box, changes its color,\r\n    * then passes the color changes to the changeColor() algorithm in order to propagate ripples.\r\n    * @param {object} value is from the data-value attribute on the box, or props.data-value */\r\n    var changeSurroundings = function (value, _a) {\r\n        var redChange = _a[0], greenChange = _a[1], blueChange = _a[2];\r\n        var currentRow = value.r;\r\n        var currentCol = value.c;\r\n        // first, if gettingColor is active, then instead get the rgb values for the current square.\r\n        if (gettingColor) {\r\n            console.log('getting color is true');\r\n            // set back to false\r\n            dispatch(colorGridSlice_2.setGettingColor());\r\n            console.log(gettingColor);\r\n            var pickedColor = { r: null, g: null, b: null };\r\n            console.log(colorGrid[currentRow][currentCol]);\r\n        }\r\n        // mapping to new grid to create a copy that doesn't have same reference\r\n        else if (colorGrid.length > 0) {\r\n            var newGrid = JSON.stringify(colorGrid); // stringifying then parsing avoids having same reference in memory\r\n            newGrid = JSON.parse(newGrid);\r\n            newGrid[currentRow].splice(currentCol, 1, {\r\n                red: newGrid[currentRow][currentCol].red + redChange,\r\n                green: newGrid[currentRow][currentCol].green + greenChange,\r\n                blue: newGrid[currentRow][currentCol].blue + blueChange\r\n            });\r\n            // console.log(\"new Grid\", newGrid)\r\n            changeColor(newGrid, ripplePropagation, 1, currentRow, currentCol, redChange, greenChange, blueChange);\r\n            dispatch(colorGridSlice_1.setColorGrid(newGrid));\r\n        }\r\n    };\r\n    return (react_1[\"default\"].createElement(\"div\", { className: 'container-fluid' },\r\n        react_1[\"default\"].createElement(Grid_1[\"default\"]\r\n        // appropriate options are passed down to lower components\r\n        , { \r\n            // appropriate options are passed down to lower components\r\n            clickVariance: clickVariance, colorGrid: colorGrid, gridSize: gridSize, changeSurroundings: changeSurroundings, rippleTransitionSpeed: rippleTransitionSpeed })));\r\n}\r\nexports[\"default\"] = GridWrapper;\r\n","import React, { useEffect, useState } from 'react';\nimport DynaColorBox from './DynaColorBox';\n\n/** Uses the color grid array of RGB values in order to map DynaColorBox components to the DOM.\n* The colorGrid array must be generated first before DynaBoxes can be mapped, \n * hence why the colorGrid is a higher order component */\nfunction Grid(props) {\n  const [width, setWidth] = useState(window.innerWidth);\n  const [height, setHeight] = useState(window.innerHeight);\n\n  // resizes the DynaColorBox components based on the window size.\n  // Resizing is only allowed every 500 ms.\n  let allowResize = true;\n  useEffect(() => {\n    function handleResize() {\n      if (allowResize) {\n        allowResize = false;\n        setTimeout(() => {\n          setWidth(window.innerWidth)\n          setHeight(window.innerHeight)\n          allowResize = true;\n        }, 500)\n      }\n    }\n    window.addEventListener('resize', handleResize);\n  }, [])\n\n  // enable to see changes in color grid\n  // useEffect(() => {\n  //   console.log(props.colorGrid)\n  // }, [props.colorGrid])\n\n  // r and c are used to indicate rows and columns in the keys and data\n  let r = -1;\n  let c = -1;\n\n  // if (Array.isArray(props.colorGrid) && props.colorGrid.length > 0) {\n    return (\n      <>\n        {props.colorGrid.map((row) => {\n          r++;\n          return (\n            <div className='row' key={r}>\n              {row.map((box) => {\n                // reset column to 0 after it reaches max\n                {\n                  if (++c > (props.gridSize - 1)) {\n                    c = 0\n                  }\n                }\n                // map a grid of DynaColorBoxes, based on the props.colorGrid array\n                return (\n                  <DynaColorBox\n                    clickVariance={props.clickVariance}\n                    key={`r${c}c${r}`}\n                    data-value={{ r: r, c: c }}\n                    red={box.red}\n                    green={box.green}\n                    blue={box.blue}\n                    changeSurroundings={props.changeSurroundings}\n                    numColumns={props.gridSize}\n                    rippleTransitionSpeed={props.rippleTransitionSpeed}\n                    height={height}\n                    width={width}\n                  />\n                );\n              })}\n            </div>\n          )\n        })}\n      </>\n    )\n  // } else {\n  //   return (<> </>)\n  // }\n}\n\nexport default Grid;","export default __webpack_public_path__ + \"static/media/watercolor-circle2.7a7c6d4c.svg\";","export default __webpack_public_path__ + \"static/media/watercolor-circle3.2aa72dcd.svg\";","export default __webpack_public_path__ + \"static/media/watercolor-circle.a6689a7c.svg\";","export default __webpack_public_path__ + \"static/media/watercolor-background.73882de6.png\";","import React, { useState } from 'react';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport { Redirect, useHistory } from 'react-router-dom';\n\nexport default function OptionsDropdown(props) {\n  const [redirect, setRedirect] = useState();\n  const history = useHistory();\n\n  let generateNewGrid = async () => {\n    // Generate a new grid with the selected options by redirecting to appropriate route,\n    // if options are stored. Else reload page.\n    let options = JSON.parse(sessionStorage.getItem('optionsGrid'));\n    if (!options) {\n      // await setRedirect(\n      //   <Redirect to='/options' />\n      // )\n      history.push('/options')\n      // window.location.reload();\n    }\n    else {\n      // pushing history doesn't seem helpful, since the colorgrid doesn't revert anyway\n      await setRedirect(\n        <Redirect to='/optionsgrid' />\n      )\n      window.location.reload();\n    }\n  }\n\n  // generate default grid\n  let generateDefaultGrid = async () => {\n    await setRedirect(\n      <Redirect to='/' />\n    )\n    window.location.reload();\n  }\n\n  return (\n    <>\n    {redirect}\n      <Dropdown className='dropdown'>\n        <Dropdown.Toggle variant=\"secondary\" className=\"dropdown-basic\">\n          Options\n        </Dropdown.Toggle>\n\n        <Dropdown.Menu>\n          <Dropdown.Item onClick={generateNewGrid}>New Grid with Customized Options</Dropdown.Item>\n          <Dropdown.Item onClick={generateDefaultGrid}>New Grid with Default Options</Dropdown.Item>\n          <Dropdown.Item href=\"/options\">Go to Options Page</Dropdown.Item>\n          {/* <Dropdown.Item href=\"#\">Save to be implemented</Dropdown.Item>\n          <Dropdown.Item href=\"#\">Ripple style, to be implemented</Dropdown.Item> */}\n\n        </Dropdown.Menu>\n      </Dropdown>\n    </>\n  )\n}","import React from 'react';\n\n/** a colored background */\nfunction Background() {\n\n  let styles = {\n    image: {\n        top: '0',\n        objectFit: 'cover',\n        height: '100%',\n        width: '100%',\n        margin: '0',\n        backgroundRepeat: 'no-repeat',\n        backgroundAttachment: 'fixed',\n        backgroundSize: 'cover',\n        backgroundPosition: 'center',\n        position: 'fixed',\n        zIndex: '-3'\n    }\n  }\n\n  return (\n    <div id='pink-watermelon' style={styles.image}>\n\n    </div>\n  )\n}\n\nexport default Background;","import React, { useEffect } from 'react'\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Container from 'react-bootstrap/Container';\n\nexport default function OptionsForm(props) {\n\n  // retrieves previous values from storage and puts them into form\n  useEffect(() => {\n    // can possibly switch to using state for the form input values for a more \"react\" solution, but this works fine\n    // does not work: setting default value to a state, then setting the state to options.values\n    let options = JSON.parse(sessionStorage.getItem('optionsGrid'));\n    if (options) {\n      document.getElementById('outer-shell-switch').checked=options.outerShellOnly;\n      document.getElementById('initialGrayscale').checked=options.initialGrayscale;\n      document.getElementById('rippleTransitionSpeed').value=(options.rippleTransitionSpeed * 1000);\n      document.getElementById('ripplePropagation').value=options.ripplePropagation;\n      document.getElementById('rippleSpeed').value=options.rippleSpeed;\n      document.getElementById('rippleVariance').value=options.rippleVariance;\n      document.getElementById('initialVariance').value=options.initialVariance;\n      document.getElementById('maxGridSize').value=options.maxGridSize;\n    }\n  }, [])\n\n  return (\n    <Container>\n      <Form onSubmit={props.handleFormSubmit} noValidate validated={props.validated}>\n\n        <Form.Row>\n          <Col>\n            <Form.Group controlId='maxGridSize'>\n              <Form.Label>Max Grid Size</Form.Label>\n              <Form.Control\n                type='number'\n                placeholder='20'\n                defaultValue='20'\n                max='50'\n                min='1'\n              />\n              <Form.Text>Enter a number from 1 to 50</Form.Text>\n            </Form.Group>\n          </Col>\n\n          <Col>\n            <Form.Group controlId='initialVariance'>\n              <Form.Label>Initial color variance</Form.Label>\n              <Form.Control\n                type='number'\n                placeholder='50'\n                defaultValue='50'\n                min='0'\n                max='255'\n              />\n              <Form.Text>Enter a number from 0 to 255</Form.Text>\n            </Form.Group>\n          </Col>\n\n          <Col>\n            <Form.Group controlId='rippleVariance'>\n              <Form.Label>Color variance of ripples</Form.Label>\n              <Form.Control\n                type='number'\n                placeholder='100'\n                defaultValue='100'\n                min='0'\n                max='255'\n              />\n              <Form.Text>Enter a number from 0 to 255</Form.Text>\n            </Form.Group>\n          </Col>\n        </Form.Row>\n\n        <Form.Row>\n          <Col>\n            <Form.Group controlId='rippleSpeed'>\n              <Form.Label>Outward Ripple Speed (milliseconds)</Form.Label>\n              <Form.Control\n                type='number'\n                placeholder='100'\n                defaultValue='100'\n                min='10'\n                max='2000'\n              />\n              <Form.Text>Enter a number from 10 to 2000</Form.Text>\n            </Form.Group>\n          </Col>\n\n          <Col>\n            <Form.Group controlId='ripplePropagation'>\n              <Form.Label>Size of ripples</Form.Label>\n              <Form.Control\n                type='number'\n                placeholder='3'\n                min='1'\n                max='25'\n                defaultValue='3'\n              />\n              <Form.Text>Enter a number from 1 to 25 </Form.Text>\n            </Form.Group>\n          </Col>\n\n          <Col>\n            <Form.Group controlId='rippleTransitionSpeed'>\n              <Form.Label>Ripple color change speed (milliseconds)</Form.Label>\n              <Form.Control\n                type='number'\n                placeholder='1500'\n                defaultValue='1500'\n                min='10'\n                max='5000'\n              />\n              <Form.Text>Enter a number from 10 to 5000 </Form.Text>\n            </Form.Group>\n          </Col>\n        </Form.Row>\n\n        <Form.Row>\n          {/* <Form.Check\n          type=\"switch\"\n          id=\"grayscaleChange\"\n          label=\"Color Changes are Grayscale\"\n          onClick={() => {}}\n        /> */}\n          <Col>\n            <Form.Check\n              type=\"switch\"\n              id=\"initialGrayscale\"\n              label=\"Grid is initially Grayscale\"\n              onClick={() => { }}\n              defaultChecked={true}\n            />\n          </Col>\n\n          {/* <Form.Check\n          type=\"switch\"\n          id=\"auto-switch\"\n          label=\"Auto Drop\"\n          onClick={() => {}}\n        /> */}\n\n          <Col>\n            <Form.Check\n              type=\"switch\"\n              id=\"outer-shell-switch\"\n              label=\"Only Outer Shell Changes Color\"\n              defaultChecked={false}\n              onClick={() => {}}\n            />\n          </Col>\n\n        </Form.Row>\n        <br />\n        <Row>\n          <Button type='submit' className='btn btn-success'>Generate grid with customized options</Button>\n        </Row>\n        {/* <Button className='btn btn-secondary'>Store Options (not yet functional)</Button> */}\n        {/* <Button className='btn btn-secondary'>Load Options (not yet functional)</Button> */}\n      </Form>\n\n      {/* <Button className='btn btn-warning'>See stored color ripples in database (to be implemented)</Button> */}\n    </Container>\n  )\n}","import React, { useEffect, useState } from 'react';\nimport Image from 'react-bootstrap/Image';\nconst circle2 = require('../../assets/watercolor-circle2.svg');\nconst circle3 = require('../../assets/watercolor-circle3.svg');\nconst circle1 = require('../../assets/watercolor-circle.svg');\n\nexport default function WatercolorCircles() {\n  const [opacity1, setOpacity1] = useState(0);\n  const [opacity2, setOpacity2] = useState(0);\n  const [opacity3, setOpacity3] = useState(0);\n\n\n  let styles = {\n    circle1: {\n      position: 'fixed',\n      zIndex: '-2',\n      width: '70%',\n      top: '45%',\n      left: '10%',\n      transform: 'translateX(-20%)',\n      transitionProperty: 'opacity',\n      transitionDuration: '2s',\n      opacity: opacity1\n    },\n    circle2: {\n      position: 'fixed',\n      zIndex: '-1',\n      width: '70%',\n      top: '45%',\n      left: '50%',\n      transform: 'translateX(-50%)',\n      transitionProperty: 'opacity',\n      transitionDuration: '2s',\n      opacity: opacity2\n    },\n    circle3: {\n      position: 'fixed',\n      zIndex: '-2',\n      width: '70%',\n      top: '45%',\n      left: '90%',\n      transform: 'translateX(-80%)',\n      transitionProperty: 'opacity',\n      transitionDuration: '2s',\n      opacity: opacity3\n    }\n  }\n\n  // changes the opacity of the watercolor circles, in a pattern dictated by the array\n  let counter = 1;\n  let changeOpacity = async () => {\n    let opacityArr = [\n      [1, 0, 0],\n      [0, 1, 0],\n      [0, 0, 1],\n      [1, 1, 1],\n      [1, 0, 1],\n      [0, 1, 0],\n      [1, 1, 1],\n      [0, 0, 1],\n      [0, 1, 0],\n      [1, 0, 0],\n      [1, 1, 1]\n    ]\n\n    setOpacity1(opacityArr[counter][0]);\n    setOpacity2(opacityArr[counter][1]);\n    setOpacity3(opacityArr[counter][2]);\n\n    counter++;\n    if (counter >= opacityArr.length) {\n      counter = 0;\n    }\n  }\n\n  useEffect(() => {\n    setOpacity1(1)\n    let opacityInterval = setInterval(changeOpacity, 6000)\n\n    // cleans up the clearInterval function upon component unmount\n    return() => {\n      clearInterval(opacityInterval)\n    }\n  }, [])\n\n\n  return (<>\n    <Image style={styles.circle2} src={require(circle1)} alt='watercolor circle' />\n    <Image style={styles.circle1} src={require(circle2)} alt='watercolor circle' />\n    <Image style={styles.circle3} src={require(circle3)} alt='watercolor circle' />\n  </>)\n}","import { createSlice } from '@reduxjs/toolkit';\n\nexport const userSlice = createSlice({\n  name: 'user',\n  initialState: {\n    currentUser: null\n  },\n  reducers: {\n    loggedInUser: (state, action) => {\n      console.log(action.payload)\n      state.currentUser = action.payload;\n    }\n  }\n});\n\nexport const selectLoggedInUser = state => state.user.currentUser;\n\nexport const { loggedInUser } = userSlice.actions\n\nexport default userSlice.reducer;","import Axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport { loggedInUser, selectLoggedInUser } from '../redux/userSlice';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setColorGrid, selectColorGrid } from '../redux/colorGridSlice';\n\nexport default function SaveDropdown(props) {\n  const dispatch = useDispatch();\n  let userInfo = useSelector(selectLoggedInUser);\n  let colorGrid = useSelector(selectColorGrid);\n\n  useEffect(() => {\n    console.log(userInfo)\n  })\n\n  let saveGrid = (slot) => {\n    if (userInfo !== null) {\n      Axios.put(`api/save/${userInfo._id}/${slot}`, colorGrid).then(data => {\n        // indicate save here\n      }).catch((err) => {\n        console.error(err);\n      })\n    }\n  }\n\n  return (<>\n    <Dropdown className='dropdown'>\n      <Dropdown.Toggle variant=\"secondary\" className=\"dropdown-basic\">\n        Save\n      </Dropdown.Toggle>\n      <Dropdown.Menu>\n\n        <Dropdown.Item onClick={() => saveGrid(1)}>Slot 1</Dropdown.Item>\n        <Dropdown.Item onClick={() => saveGrid(2)}>Slot 2</Dropdown.Item>\n        <Dropdown.Item onClick={() => saveGrid(3)}>Slot 3</Dropdown.Item>\n      </Dropdown.Menu>\n    </Dropdown>\n  </>)\n}","import Axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport { loggedInUser, selectLoggedInUser } from '../redux/userSlice';\nimport { setColorGrid, selectColorGrid } from '../redux/colorGridSlice';\nimport { useSelector, useDispatch } from 'react-redux';\n\nexport default function LoadDropdown(props) {\n  const dispatch = useDispatch();\n  let userInfo = useSelector(selectLoggedInUser);\n  let colorGrid = useSelector(selectColorGrid);\n\n\n  useEffect(() => {\n    //get user every time grid is saved\n  }, [])\n\n  let loadGrid = (slot) => {\n    if (userInfo !== null) {\n      console.log('loading')\n      Axios.get(`api/load/${userInfo._id}/${slot}`).then(loadedGrid => {\n        if (loadedGrid) {\n          console.log(loadedGrid.data)\n          if (loadedGrid.data !== null) {\n            dispatch(setColorGrid(loadedGrid.data));\n          }\n        }\n      }).catch((err) => {\n        console.error(err);\n      })\n    }\n  }\n\n  return (<>\n    <Dropdown className='dropdown'>\n      <Dropdown.Toggle variant=\"secondary\" className=\"dropdown-basic\">\n        Load\n      </Dropdown.Toggle>\n      <Dropdown.Menu>\n\n        <Dropdown.Item onClick={() => loadGrid(1)}>Slot 1</Dropdown.Item>\n        <Dropdown.Item onClick={() => loadGrid(2)}>Slot 2</Dropdown.Item>\n        <Dropdown.Item onClick={() => loadGrid(3)}>Slot 3</Dropdown.Item>\n      </Dropdown.Menu>\n    </Dropdown>\n\n  </>)\n}","import React, { useEffect, useState } from 'react';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport { setGettingColor, selectGettingColor } from '../redux/colorGridSlice'\nimport { useSelector, useDispatch } from 'react-redux';\n\nexport default function ColorChooseIndicator() {\n  const [opacity, setOpacity] = useState(0);\n  let gettingColor = useSelector(selectGettingColor);\n\n  useEffect(() => {\n    gettingColor ? setOpacity(1) : setOpacity (0);\n  }, [gettingColor])\n\n  let styles = {\n    chooseIndicator: {\n      // left: '42%',\n      // position: 'absolute',\n      opacity: opacity,\n      transition: 'opacity 0.5s'\n      // transform: 'translateX(-50%)'\n    }\n  }\n\n  return (<>\n    <Dropdown disabled className='dropdown' style={styles.chooseIndicator}>\n      <Dropdown.Toggle disabled variant=\"secondary\" id='chooseIndicator'>\n       Select Color Below!\n      </Dropdown.Toggle>\n    </Dropdown>\n  </>)\n}","import React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { loggedInUser, selectLoggedInUser } from '../redux/userSlice';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Axios from 'axios';\n\n// the login / logout button changes depending on logged in status\nexport default function ShouldLogIn() {\n  const dispatch = useDispatch();\n  const userInfo = useSelector(selectLoggedInUser);\n  const [loginBtn, setLoginBtn] = useState();\n  const history = useHistory();\n\n  const logout = () => {\n    Axios.get('/api/logout').then(() => {\n      dispatch(loggedInUser(null));\n      window.location.reload();\n    })\n  }\n\n  // change when userInfo changes\n  useEffect(() => {\n    if (userInfo) {\n      setLoginBtn(\n        <button \n          className='btn-secondary btn dropdown-basic should-log-in'\n          onClick={logout}\n        >\n          Log out\n        </button>\n      );\n    } else {\n      setLoginBtn(\n      <button \n        className='btn-secondary btn dropdown-basic should-log-in' \n        onClick={() => history.push('/login')}\n      >\n        Log in\n      </button>);\n    }\n  }, [userInfo])\n\n\n  return (<>\n    {loginBtn}\n  </>)\n}","import React, { useEffect, useState } from 'react';\nimport LoadDropdown from './LoadDropdown';\nimport OptionsDropdown from './OptionsDropdown';\nimport SaveDropdown from './SaveDropdown';\nimport { useSelector } from 'react-redux';\nimport { loggedInUser, selectLoggedInUser } from '../redux/userSlice';\nimport ColorGetter from './ColorGetter';\nimport ColorChooseIndicator from './ColorChooseIndicator';\nimport ShouldLogIn from './ShouldLogIn';\n\nexport default function TopBar() {\n  let userInfo = useSelector(selectLoggedInUser);\n  const [save, setSave] = useState();\n  const [load, setLoad] = useState();\n\n  useEffect(() => {\n    if (userInfo) {\n      setSave(<SaveDropdown />)\n      setLoad(<LoadDropdown />)\n    }\n  }, [userInfo])\n\n  return (<>\n    <div className='topbar'>\n      <OptionsDropdown />\n      <ColorGetter />\n      <div className='empty-div'></div>\n      <ColorChooseIndicator />\n      <div className='empty-div'></div>\n      {save}\n      {load}\n      <ShouldLogIn />\n    </div>\n  </>)\n}","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport Container from 'react-bootstrap/Container';\nimport '../../index.css'\nimport Background from \"./Background\"\nimport ColorGrid from '../ColorGrid';\nimport OptionsDropdown from '../OptionsDropdown';\nimport OptionsForm from './OptionsForm';\nimport WatercolorCircles from './WatercolorCircles';\nimport SaveDropdown from '../SaveDropdown';\nimport LoadDropdown from '../LoadDropdown';\nimport TopBar from '../TopBar';\n\n/** Either routes to ColorGrid with default options, or will load up ColorGrid with selected options */\nfunction OptionsPage() {\n  const [colorGrid, setColorGrid] = useState()\n  const [validated, setValidated] = useState(false);\n\n  // things that could be options:\n  // algorithm style\n  // background color\n\n  // submits options form, stores the options in session storage, then generates a grid with the selected options\n  let handleFormSubmit = (event) => {\n    event.preventDefault();\n    const form = event.currentTarget;\n    setValidated(true)\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n      // console.log(\"false\")\n    }\n\n    else {\n      // console.log(event.target)\n      let maxGridSize = event.target[0].value;\n      if (maxGridSize === '') {\n        maxGridSize = 20;\n      }\n      let initialVariance = event.target[1].value;\n      if (initialVariance === '') {\n        initialVariance = 50;\n      }\n      let rippleVariance = event.target[2].value;\n      if (rippleVariance === '') {\n        rippleVariance = 100;\n      }\n      let rippleSpeed = event.target[3].value;\n      if (rippleSpeed === '') {\n        rippleSpeed = 100;\n      }\n      let ripplePropagation = event.target[4].value;\n      if (ripplePropagation === '') {\n        ripplePropagation = 3;\n      }\n      let rippleTransitionSpeed = event.target[5].value;\n      if (rippleTransitionSpeed === '') {\n        rippleTransitionSpeed = 1.5\n      }\n      else {\n        rippleTransitionSpeed = rippleTransitionSpeed / 1000;\n      }\n      let initialGrayscale = event.target[6].checked;\n      // let grayscaleChange = event.target[7].checked;\n      // let autoDrop = event.target[8].checked;\n      // console.log(autoDrop)\n      let outerShellOnly = event.target[7].checked;\n\n      // store options in session storage for use with the options dropdown generate new grid button\n      sessionStorage.setItem('optionsGrid', JSON.stringify({\n        outerShellOnly: outerShellOnly,\n        initialVariance: initialVariance,\n        rippleVariance: rippleVariance,\n        maxGridSize: maxGridSize,\n        rippleSpeed: rippleSpeed,\n        ripplePropagation: ripplePropagation,\n        initialGrayscale: initialGrayscale,\n        rippleTransitionSpeed: rippleTransitionSpeed\n      }))\n\n      setColorGrid(\n        <ColorGrid\n          outerShellOnly={outerShellOnly}\n          initialVariance={initialVariance}\n          rippleVariance={rippleVariance}\n          maxGridSize={maxGridSize}\n          rippleSpeed={rippleSpeed}\n          ripplePropagation={ripplePropagation}\n          initialGrayscale={initialGrayscale}\n          // autoDrop={autoDrop}\n          rippleTransitionSpeed={rippleTransitionSpeed}\n        />\n      )\n    }\n  }\n\n  if (colorGrid) {\n    return (\n      <>\n        <TopBar />\n        {colorGrid}\n      </>\n    )\n  }\n  else {\n    return (\n      <>\n        <Background />\n        <WatercolorCircles />\n\n        <Jumbotron fluid id='options-jumbotron'>\n          <Container className='title-text'>\n            <h1 className='title-text'>Color Rippler</h1>\n            <p className='title-text'>\n              Select options below to customize the color ripples!\n            </p>\n            <hr></hr>\n            <Link className='color-grid-link' to='/'>Go to color grid using default settings</Link>\n          </Container>\n        </Jumbotron>\n\n        <OptionsForm\n          handleFormSubmit={handleFormSubmit}\n          validated={validated}\n        />\n      </>\n    )\n  }\n}\nexport default OptionsPage;","import React, { useState, useEffect } from \"react\";\n\nfunction AlertBox(props) {\n  const [opacity, setOpacity] = useState(0)\n\n  let styles = {\n    div: {\n      'borderColor' : 'black',\n      'borderWidth' : '2px',\n      'borderRadius': '5px',\n      'backgroundColor': 'rebeccapurple',\n      'padding': '10px',\n      'color' : 'antiquewhite',\n      opacity: opacity,\n      margin: '2px'\n    }\n  }\n\n  useEffect(() => {\n    if (props.message !== '') {\n      setOpacity(1)\n    }\n    if (props.message === '') {\n      setOpacity(0);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [props.message]);\n\n  return(\n    <div style={styles.div}>\n      {props.message}\n    </div>\n  )\n}\n\nexport default AlertBox;","import React from 'react'\nimport Image from 'react-bootstrap/Image';\n\nexport default function WatercolorBackground() {\n\n  let styles = {\n    waterBg: {\n      position: 'absolute',\n      width: '50%',\n      left: '50%',\n      transform: 'translateX(-50%)',\n      marginTop: '-2em'\n    }\n  }\n  return (<>\n    <Image src={require('../../assets/watercolor-background.png')} style={styles.waterBg} />\n  </>)\n}","import React, { useState, useEffect } from \"react\";\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport AlertBox from './AlertBox';\nimport { useHistory } from \"react-router-dom\";\nimport axios from 'axios';\nimport Container from 'react-bootstrap/Container';\nimport Col from 'react-bootstrap/Col';\nimport WatercolorBackground from \"./WatercolorBackground\";\nimport { loggedInUser, selectLoggedInUser } from '../../redux/userSlice';\nimport { useSelector, useDispatch } from 'react-redux';\n\nfunction Login() {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const history = useHistory();\n  const dispatch = useDispatch();\n  let userInfo = useSelector(selectLoggedInUser);\n\n  let handleSubmit = (event) => {\n    event.preventDefault();\n    if (username === '' || password === '') {\n      setMessage(\"Neither username nor password may be blank.\");\n    }\n    else {\n      let user = {\n        username: username,\n        password: password\n      }\n      // attempt to log in with username and password\n      axios.post(`/api/login`, user).then((data) => {\n        // if successful, get all related user data\n        axios.get(\"/api/userdata\").then(({data}) => {\n          // set the user data in the redux store\n          if (data) {\n            dispatch(loggedInUser(data))\n          }\n        })\n        // finally, go to '/'\n        history.push(\"/\");\n      }).catch((err) => {\n        if (err.message === \"Request failed with status code 401\") {\n          setMessage(\"Incorrect username or password.\");\n        } else {\n          console.log(err);\n        }\n      })\n    }\n  }\n\n  let goToSignup = (event) => {\n    event.preventDefault();\n    history.push('/signup')\n  }\n\n  useEffect(() => {\n    if (message !== \"\") {\n      setMessage(\"\");\n    }\n  }, [username, password])\n\n  // const devLogin = () => {\n  //   axios\n  //     .post(`/api/login`, { username: \"test\", password: \"test\" })\n  //     .then(() => window.location.replace(\"/\"));\n  // };\n\n  return (<>\n    <WatercolorBackground />\n    <Container className='loginSignupContainer'>\n      <Form>\n        <Form.Row>\n          <Col></Col>\n          <Col>\n            <Form.Group controlId=\"username\">\n              <Form.Label>Username</Form.Label>\n              <Form.Control\n                name='username'\n                onChange={(event) => setUsername(event.target.value)}\n                type=\"text\"\n              />\n            </Form.Group>\n          </Col>\n          <Col></Col>\n        </Form.Row>\n\n\n        <Form.Row>\n          <Col></Col>\n          <Col>\n            <Form.Group controlId=\"password\">\n              <Form.Label>Password</Form.Label>\n              <Form.Control\n                onChange={(event) => setPassword(event.target.value)}\n                type=\"password\"\n                name='password'\n              />\n            </Form.Group>\n          </Col>\n          <Col></Col>\n        </Form.Row>\n\n        <Form.Row>\n          <Col></Col>\n          <Col>\n            <Button className='signupLoginBtns' onClick={handleSubmit} variant=\"primary\" type=\"submit\">\n              Log In\n            </Button>\n          </Col>\n          <Col></Col>\n        </Form.Row>\n\n        <Form.Row>\n          <Col></Col>\n          <Col>\n            <Button className='signupLoginBtns' onClick={goToSignup} variant=\"success\" type=\"submit\">\n              Sign Up Form\n            </Button>\n          </Col>\n          <Col></Col>\n        </Form.Row>\n\n        <Form.Row>\n\n          <Col></Col>\n          <Col>\n            <AlertBox\n              message={message}\n            />\n          </Col>\n          <Col></Col>\n\n        </Form.Row>\n\n        {/* <Button onClick={devLogin}>\n          DEV LOGIN\n          </Button> */}\n      </Form>\n    </Container>\n  </>)\n}\n\nexport default Login;","import React, { useState, useEffect } from \"react\";\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport AlertBox from './AlertBox';\nimport axios from 'axios';\nimport { Redirect } from \"react-router-dom\"\nimport { useHistory } from \"react-router-dom\";\nimport Container from 'react-bootstrap/Container';\nimport Col from 'react-bootstrap/Col';\nimport WatercolorBackground from \"./WatercolorBackground\";\n\nfunction Signup({ loading, user }) {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const history = useHistory();\n\n  let handleSubmit = (event) => {\n    event.preventDefault();\n\n    if (username === '' || password === '') {\n      setMessage(\"Neither username nor password may be blank.\")\n    }\n    else {\n      let user = {\n        username: username,\n        password: password\n      }\n\n      axios.post('api/users', user).then(data => {\n        // console.log(data)\n        if (data.data === \"That username already exists!\") {\n          setMessage(data.data);\n        }\n        else if (data.data === \"Password must be at least 6 characters.\") {\n          setMessage(data.data);\n        }\n        else {\n          history.push('/login');\n        }\n      })\n    }\n  }\n\n  let goToLogin = (event) => {\n    event.preventDefault();\n    history.push('/login');\n  }\n\n  useEffect(() => {\n    if (message !== \"\") {\n      setMessage(\"\");\n    }\n  }, [username, password])\n\n  return ((user && !loading) ? <Redirect to=\"/home\" /> :\n    <>\n      <WatercolorBackground />\n      <Container className='loginSignupContainer'>\n\n        <Form>\n          <Form.Row>\n            <Col></Col>\n            <Col>\n              <Form.Group controlId=\"username\">\n                <Form.Label>Username</Form.Label>\n                <Form.Control\n                  name='username'\n                  onChange={(event) => setUsername(event.target.value)}\n                  type=\"text\"\n                  placeholder=\"\"\n                />\n              </Form.Group>\n            </Col>\n            <Col></Col>\n          </Form.Row>\n\n\n          <Form.Row>\n            <Col></Col>\n            <Col>\n              <Form.Group controlId=\"password\">\n                <Form.Label>Password</Form.Label>\n                <Form.Control\n                  onChange={(event) => setPassword(event.target.value)}\n                  type=\"password\"\n                  placeholder=\"password\"\n                  name='password'\n                />\n              </Form.Group>\n            </Col>\n            <Col></Col>\n          </Form.Row>\n\n          <Form.Row>\n            <Col></Col>\n            <Col>\n              <Button className='signupLoginBtns' onClick={handleSubmit} variant=\"danger\" type=\"submit\">\n                Sign up\n        </Button>\n            </Col>\n            <Col></Col>\n          </Form.Row>\n\n          <Form.Row>\n            <Col></Col>\n            <Col>\n              <Button className='signupLoginBtns' onClick={goToLogin} variant=\"primary\" type=\"submit\">\n                Go to Log In Form\n        </Button>\n            </Col>\n            <Col></Col>\n          </Form.Row>\n\n          <Col></Col>\n          <Col>\n            <AlertBox\n              message={message}\n            />\n          </Col>\n          <Col></Col>\n        </Form>\n      </Container>\n    </>\n  )\n}\n\nexport default Signup;","import React, { useState, useEffect } from 'react';\nimport OptionsDropdown from './components/OptionsDropdown';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport ColorGrid from './components/ColorGrid';\nimport OptionsPage from './components/OptionsPage/OptionsPage';\nimport Login from './components/LoginSignupPages/Login';\n// import ColorGetter from './components/ColorGetter';\nimport axios from 'axios';\nimport Signup from './components/LoginSignupPages/Signup';\nimport { loggedInUser, selectLoggedInUser } from './redux/userSlice';\nimport { useSelector, useDispatch } from 'react-redux';\nimport SaveDropdown from './components/SaveDropdown';\nimport LoadDropdown from './components/LoadDropdown';\nimport TopBar from './components/TopBar';\n\nfunction App() {\n  const [colorGrid, setColorGrid] = useState([]);\n\n  const [loading, setLoading] = useState(true);\n  const dispatch = useDispatch();\n  let userInfo = useSelector(selectLoggedInUser);\n\n\n  useEffect(() => {\n    axios.get(\"/api/userdata\").then(({ data }) => {\n      if (data) {\n        console.log(data)\n        dispatch(loggedInUser(data))\n      }\n    })\n  }, [])\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n\n          <Route exact path='/options' component={OptionsPage} />\n\n          {/* Loads the color grid with default options */}\n          <Route exact path='/'>\n            {/* <ColorGetter /> */}\n            <TopBar />\n            <ColorGrid />\n          </Route>\n\n          {/* This route loads the grid with custom options */}\n          <Route exact path='/optionsgrid'>\n            <TopBar />\n            <ColorGrid\n              reloadingWithOptions={true}\n            />\n          </Route>\n\n          <Route exact path='/login'>\n            <Login />\n          </Route>\n\n          <Route exact path='/signup'>\n            <Signup />\n          </Route>\n\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\nimport userReducer from './userSlice';\nimport colorGridReducer from './colorGridSlice';\n\nexport default configureStore({\n  reducer: {\n    user: userReducer,\n    colorGrid: colorGridReducer\n  }\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport store from './redux/store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n    <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}